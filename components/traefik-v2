#! /bin/bash
# Traefik V2
docker network create -d bridge --subnet=172.18.0.0/24 internal 
echo "Installing Traefik V2"
echo "Enter your GoDaddy API Key"
read DOMAINAPIKEY

echo "Enter your GoDaddy API Secret"
read DOMAINAPISECRET

echo "Enter your Google OAuth Client ID"
read OAUTHCLIENT

echo "Enter your Google OAuth Secret"
read OAUTHSECRET

echo "Enter comma separated list of authorized users.  ie. user1@gmail.com,user2@gmail.com,"
read AUTHORIZEDUSERS

echo "Enter Certificate Contact Email Address"
read CERTCONTACT

## create toml file
mkdir $DOCKERPATH/traefik-v2
cat > $DOCKERPATH/traefik-v2/traefik.yml << EOF1
global:
  checkNewVersion: true
  sendAnonymousUsage: false  # true by default

# (Optional) Log information
# ---
log:
  level: DEBUG  # DEBUG, INFO, WARNING, ERROR, CRITICAL
    format: common  # common, json, logfmt
    filePath: /etc/traefik/log/traefik.log

# (Optional) Accesslog
# ---
accesslog:
  format: common  # common, json, logfmt
  filePath: /etc/traefik/log/access.log

# (Optional) Enable API and Dashboard
# ---
api:
  dashboard: true  # true by default
  insecure: true  # Don't do this in production!

# Entry Points configuration
# ---
entryPoints:
  web:
    address: :80
    # (Optional) Redirect to HTTPS
    # ---
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https

  websecure:
    address: :443

# Configure your CertificateResolver here...
# ---
certificatesResolvers:
#   staging:
#     acme:
#       email: your-email@example.com
#       storage: /etc/traefik/certs/acme.json
#       caServer: "https://acme-staging-v02.api.letsencrypt.org/directory"
#       httpChallenge:
#         entryPoint: web
#
acme:
  email: brandon@brandon-taylor.net
  storage: /etc/traefik/acme/acme.json
  caServer: "https://acme-v02.api.letsencrypt.org/directory"
  dnsChallenge:
    provider: godaddy
    delayBeforeCheck: 60
  domains:
    main: '*.interwebnet.net'
    sans: 'interwebnet.net'
  httpChallenge:
    entryPoint: web

# (Optional) Overwrite Default Certificates
tls:
  stores:
    default:
      defaultCertificate:
        certFile: /etc/traefik/acme/cert.pem
        keyFile: /etc/traefik/acme/cert-key.pem
# (Optional) Disable TLS version 1.0 and 1.1
  options:
    default:
      minVersion: VersionTLS12

providers:
  docker:
    exposedByDefault: false  # Default is true
  file:
    # watch for dynamic configuration changes
    directory: /etc/traefik
    watch: true
EOF1

## Install Traefik Container
docker run -d \
--name=traefik-v2 \
-p 80:80 \
-p 443:443 \
-e PUID=1000 \
-e PGID=1000 \
-e GODADDY_API_SECRET=$DOMAINAPISECRET \
-e GODADDY_API_KEY=$DOMAINAPIKEY \
-e PROVIDER=godaddy \
-v /var/run/docker.sock:/var/run/docker.sock \
-v /etc/localtime:/etc/localtime \
-v $DOCKERPATH/traefik/acme:/etc/traefik/acme \
-v $DOCKERPATH/traefik:/etc/traefik \
-v traefiktmp:/tmp \
--network=internal \
--restart=always \
traefik:v1.7  > traefik.log 2>&1

docker network connect bridge traefik  > traefik.log 2>&1

#Install OAuth

echo "Installing OAuth Container" 
##Generate Secret Key
SECRETKEY=$(hexdump -n 16 -e '4/4 "%08X" 1 "\n"' /dev/random)

##Create Container
docker run -d \
--name=oauth \
-e PUID=1000 \
-e PGID=1000 \
-e AUTH_HOST=oauth.$DOMAINNAME \
-e INSECURE_COOKIE=True \
-e WHITELIST=$AUTHORIZEDUSERS \
-e CLIENT_ID=$OAUTHCLIENT \
-e CLIENT_SECRET=$OAUTHSECRET \
-e SECRET=$SECRETKEY \
-e LIFETIME=2592000 \
-e COOKIE_DOMAIN=$DOMAINNAME \
-l traefik.backend=oauth \
-l "traefik.enable"="true" \
-l "traefik.frontend.auth.forward.address"="http://oauth:4181" \
-l "traefik.frontend.rule"="Host:oauth.$DOMAINNAME" \
-l "traefik.port"="4181" \
--restart=always \
thomseddon/traefik-forward-auth > traefik.log 2>&1

docker network connect internal oauth > traefik.log 2>&1
